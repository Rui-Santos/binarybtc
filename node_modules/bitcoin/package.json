{
  "name": "bitcoin",
  "description": "Communicate with bitcoind via JSON-RPC",
  "version": "1.5.0",
  "main": "./lib/bitcoin",
  "keywords": [
    "bitcoin",
    "rpc"
  ],
  "author": {
    "name": "Bill Casarin",
    "email": "bill@casarin.ca",
    "url": "jb55.com"
  },
  "contributors": [
    {
      "name": "Sean Lavine",
      "email": "sean@eternalrise.com"
    }
  ],
  "dependencies": {},
  "repository": {
    "type": "git",
    "url": "git://github.com/freewil/node-bitcoin.git"
  },
  "devDependencies": {
    "vows": "0.6.x"
  },
  "engines": {
    "node": ">= 0.6.0 < 0.9.0"
  },
  "scripts": {
    "test": "make test"
  },
  "optionalDependencies": {},
  "readme": "# node-bitcoin\n\n[![Build Status](https://secure.travis-ci.org/freewil/node-bitcoin.png)](https://secure.travis-ci.org/freewil/node-bitcoin)\n\nnode-bitcoin is a simple wrapper for the Bitcoin client's JSON-RPC API.\n\nThe API is equivalent to the API document [here](https://en.bitcoin.it/wiki/Original_Bitcoin_client/API_Calls_list).\nThe methods are exposed as lower camelcase methods on the `bitcoin.Client`\nobject, or you may call the API directly using the `cmd` method.\n\n## Install\n\n`npm install bitcoin`\n\n## Setup\n\n1. Traverse to `~/.bitcoin` or `~/Library/Application Support/Bitcoin` and add a\nfile called `bitcoin.conf` if it doesn't already exist.\n\n2. Add these lines to the file:\n\n    rpcuser=username\n\n    rpcpassword=password\n\nYou will use these to login to the server.\n\n3. Start your Bitcoin client with the `-server` argument or run `bitcoind`\n\n4. You should now be able to communicate with Bitcoin JSON-RPC API using the\nnode-bitcoin library, try it out!\n\n## Examples\n\n### Create client\n```js\nvar bitcoin = require('bitcoin');\nvar client = new bitcoin.Client('localhost', 8332, 'username', 'password');\n```\n\n### Create client with single object\n```js\nvar client = new bitcoin.Client({\n  host: 'localhost',\n  port: 8332,\n  user: 'username',\n  pass: 'password'\n});\n```\n\n### Get balance across all accounts with minimum confirmations of 6\n\n```js\nclient.getBalance('*', 6, function(err, balance) {\n  if (err) return console.log(err);\n  console.log('Balance:', balance);\n});\n```\n### Getting the balance directly using `cmd`\n\n```js\nclient.cmd('getbalance', '*', 6, function(err, balance){\n  if (err) return console.log(err);\n  console.log('Balance:', balance);\n});\n```\n\n### Batch multiple RPC calls into single HTTP request\n\n```js\nvar batch = [];\nfor (var i = 0; i < 10; ++i) {\n  batch.push({\n    method: 'getnewaddress',\n    params: ['myaccount']\n  });\n}\nclient.cmd(batch, function(err, address) {\n  if (err) return console.log(err);\n  console.log('Address:', address);\n});\n```\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/freewil/node-bitcoin/issues"
  },
  "homepage": "https://github.com/freewil/node-bitcoin",
  "_id": "bitcoin@1.5.0",
  "dist": {
    "shasum": "fb076353c69d941de686f171745ff2c0ce292666"
  },
  "_from": "bitcoin@~1.5.0",
  "_resolved": "http://registry.npmjs.org/bitcoin/-/bitcoin-1.5.0.tgz"
}
